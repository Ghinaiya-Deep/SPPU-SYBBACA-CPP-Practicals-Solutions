#include<iostream.h>
#include<conio.h>
class MyArray {
private:
    int *arr;
    int size;

public:
    // Constructor
    MyArray(int s)
     {   size=s;
	arr = new int[size];
    }

    // Destructor
    ~MyArray() {
	delete[] arr;
    }

    // Function to accept array elements
    void accept() {
int i;
	cout << "Enter " << size << " elements:\n";
	for ( i = 0; i < size;i++) {
	cin >> arr[i];
	}
    }


    void display()
		 {
			int i;
			cout << "Array elements are:\n";
			for ( i = 0; i < size; i++)
			{

				cout << arr[i] << " ";
			}
			cout << endl;
		}



    // Overloading unary operator to add a constant to all array elements
    MyArray operator +(int n) {
	int i;
	MyArray temp(size);
	for (i = 0; i < size;i++)
	{
	    temp.arr[i] = arr[i] + n;
	}
	return temp;
    }
};

int main() {
    int size,constant;
    clrscr();
    cout << "Enter size of the array: ";
    cin >> size;


    MyArray arr(size);
    arr.accept();

    // Display original array
    cout << "Original ";
    arr.display();


    // Add constant to array elements

    cout << "Enter constant to add to array elements: ";
    cin >> constant;
    MyArray modifiedArr = arr + constant;
    cout << "Modified ";
    modifiedArr.displayt();
    getch();
    return 0;
}
